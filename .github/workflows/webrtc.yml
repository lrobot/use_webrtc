name: WebRTC
permissions: {}

on:
  workflow_dispatch:
    inputs:
      webrtc_commit:
        description: 'Specify WebRTC commit to build.'
        required: false
        default: 'dd86c95b6aa67519664c9d9ed13489932300ca0a'  # Date: Sun Sep 1 21:06:52 2024 -0700
      depot_tools_commit:
        description: 'Specify Depot Tools commit to to use for the build.'
        required: false
        default: 'b89b4403516e5bf09bfdc94821453414eca168b4' # Date: Mon Sep 2 01:08:43 2024 +0000

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  WEBRTC_COMMIT: ${{ github.event.inputs.webrtc_commit }}
  DEPOT_TOOLS_COMMIT: ${{ github.event.inputs.depot_tools_commit }}

jobs:

  Unix:
    permissions:
      contents: write  # upload
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # https://github.com/actions/runner-images/blob/main/images/ubuntu
        # https://github.com/actions/runner-images/tree/main/images/macos
        os: [ubuntu-22.04, macos-14]
#        GLIBCXX_USE_CXX11_ABI: [0, 1]
#        exclude:
#          - os: macos-12
#            GLIBCXX_USE_CXX11_ABI: 0
#    env:
#      GLIBCXX_USE_CXX11_ABI: ${{ matrix.GLIBCXX_USE_CXX11_ABI }}

    steps:
      - name: Maximize build space
        if: runner.os == 'Linux'
        uses: easimon/maximize-build-space@master
        with:
          overprovision-lvm: 'true'
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-docker-images: 'true'
          remove-codeql: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
      - name: df0
        run: |
          echo "df disk"
          df -h
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Set up Mac Env
        run: |
          xcrun --show-sdk-version
          xcode-select -p
# if [ ${{ matrix.os }} == 'macos-12' ]; then
#   echo "Setting up Mac environment"
#   sudo softwareupdate --install-rosetta
#   ls `xcode-select -p`/Platforms/MacOSX.platform/Developer/SDKs
#   brew install cmake ninja
# fi

      - name: Install dependencies
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          echo "install_dependencies_ubuntu"
          3rdparty/webrtc/webrtc_build.sh install_dependencies_ubuntu
          
      - name: Download WebRTC sources
        run: |
          echo "download_webrtc_sources"
          3rdparty/webrtc/webrtc_build.sh download_webrtc_sources
      - name: df1
        run: |
          echo "df disk"
          df -h
      - name: Build WebRTC
        run: |
          echo "build_webrtc"
          3rdparty/webrtc/webrtc_build.sh build_webrtc

      - name: Upload WebRTC
        uses: actions/upload-artifact@v4
        with:
          name: webrtc_release_${{ matrix.os }}
          path: |
                 webrtc_*.tar.gz
                 checksum_*.txt
          if-no-files-found: error

  Windows:
    if: false
    #needs: [CI]
    permissions:
      contents: write  # upload
    # https://chromium.googlesource.com/chromium/src/+/HEAD/docs/windows_build_instructions.md
    runs-on: windows-2019
    env:
      WORK_DIR: "C:\\WebRTC"  # Not enough space in D:
      OPEN3D_DIR: "D:\\a\\open3d\\open3d"
      DEPOT_TOOLS_UPDATE: 1   # Fix cannot find python3_bin_reldir.txt
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      NPROC: 2

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Disk space
        run: |
          Get-PSDrive
          mkdir "$env:WORK_DIR"

      - name: Setup PATH for Visual Studio # Required for Ninja
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Download WebRTC sources
        shell: pwsh
        working-directory: ${{ env.WORK_DIR }}
        run: |
          $ErrorActionPreference = 'Stop'
          echo "Get depot_tools"
          # Checkout to a specific version
          # Ref: https://chromium.googlesource.com/chromium/src/+/main/docs/building_old_revisions.md
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          git -C depot_tools checkout $env:DEPOT_TOOLS_COMMIT
          $env:Path = (Get-Item depot_tools).FullName + ";" + $env:Path

          echo "Get WebRTC"
          mkdir webrtc
          cd webrtc
          fetch webrtc

          git -C src checkout $env:WEBRTC_COMMIT
          git -C src submodule update --init --recursive
          echo "gclient sync"
          gclient sync -D --force --reset
          cd ..
          echo "random.org"
          curl "https://www.random.org/cgi-bin/randbyte?nbytes=10&format=h" -o skipcache

      - name: Patch WebRTC
        working-directory: ${{ env.WORK_DIR }}
        run: |
          $ErrorActionPreference = 'Stop'
          cp "$env:OPEN3D_DIR/3rdparty/webrtc/CMakeLists.txt" webrtc/
          cp "$env:OPEN3D_DIR/3rdparty/webrtc/webrtc_common.cmake" webrtc/

      - name: Build WebRTC (Release)
        working-directory: ${{ env.WORK_DIR }}
        run: |
          $ErrorActionPreference = 'Stop'
          $env:Path = (Get-Item depot_tools).FullName + ";" + $env:Path
          mkdir webrtc/build
          cd webrtc/build
          cmake -G Ninja -D CMAKE_BUILD_TYPE=Release `
                -D CMAKE_INSTALL_PREFIX=${{ env.WORK_DIR }}/webrtc_release/Release `
                ..
          ninja install
          echo "Cleanup build folder for next config build"
          cd ..
          rm -r build

      - name: Build WebRTC (Debug)
        working-directory: ${{ env.WORK_DIR }}
        run: |
          $ErrorActionPreference = 'Stop'
          $env:Path = (Get-Item depot_tools).FullName + ";" + $env:Path
          mkdir webrtc/build
          cd webrtc/build
          cmake -G Ninja -D CMAKE_BUILD_TYPE=Debug `
                -D CMAKE_INSTALL_PREFIX=${{ env.WORK_DIR }}/webrtc_release/Debug `
                ..
          ninja install

      - name: Package WebRTC
        working-directory: ${{ env.WORK_DIR }}
        run: |
          $ErrorActionPreference = 'Stop'
          $env:WEBRTC_COMMIT_SHORT = (git -C webrtc/src rev-parse --short=7 HEAD)
          cmake -E tar cv webrtc_${env:WEBRTC_COMMIT_SHORT}_win.zip `
            --format=zip -- webrtc_release
          cmake -E sha256sum webrtc_${env:WEBRTC_COMMIT_SHORT}_win.zip | Tee-Object -FilePath checksum_win.txt

      - name: Upload WebRTC
        uses: actions/upload-artifact@v4
        with:
          name: webrtc_release_windows
          path: |
                 ${{ env.WORK_DIR }}/webrtc_*.zip
                 ${{ env.WORK_DIR }}/checksum_*.txt
          if-no-files-found: error
